// Standard trasnsition

@mixin mq($break) {
  @if $break == baby {
    @media only screen and (max-width: 500px) { @content; }
  }
  @else if $break == toddler {
    @media only screen and (min-width: 501px) { @content; }
  }
  @else if $break == goldie {
    @media only screen and (min-width: 635px) { @content; }
  }
  @else if $break == goldiePlus {
    @media only screen and (min-width: 736px) { @content; }
  }
  @else if $break == momma{
    @media only screen and (min-width: 768px) { @content; }
  }
  @else if $break == grandma {
    @media only screen and (min-width: 960px) { @content; }
  }
  @else if $break == pappa {
    @media only screen and (min-width: 1024px) { @content; }
  }
  @else if $break == grampa {
    @media only screen and (min-width: 1300px) { @content; }
  }
  @else if $break == grampaPlus {
    @media only screen and (min-width: 1600px) { @content; }
  }
  @else if $break == hodor {
    @media only screen and (min-width: 2000px) { @content; }
  }
}

@mixin rotate($val: 180deg) {

  -webkit-transform: rotate($val);
          transform: rotate($val);
}

@mixin trans($val: 0350ms) {
  -webkit-transition: all $val ease-in-out; 
  -moz-transition: all $val ease-in-out; 
  -o-transition: all $val ease-in-out; 
  transition: all $val ease-in-out;
}

@mixin delay ($val: 0.250ms) {
  -webkit-animation-delay: $val;
          animation-delay: $val;
}

@mixin grow ($valx: 1.05, $valy: 1.05) {

  -webkit-transform: scale($valx , $valy);
          transform: scale($valx , $valy);

}


// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}


@mixin square($val: 1em) {
  height: $val;
  width: $val;
}

@mixin abs($top: auto, $right: auto, $bottom: auto, $left: auto ) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}
